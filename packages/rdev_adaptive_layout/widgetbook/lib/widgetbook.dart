import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:widgetbook/widgetbook.dart';
import 'package:widgetbook_annotation/widgetbook_annotation.dart' as anno;

// Important: Keep this file synced with the one generated by build_runner
// Run `flutter pub run build_runner build --delete-conflicting-outputs` in `app/widgetbook`
import 'widgetbook.directories.g.dart';

void main() {
  runApp(const WidgetbookApp());
}

@anno.App()
class WidgetbookApp extends StatelessWidget {
  const WidgetbookApp({super.key});

  @override
  Widget build(BuildContext context) {
    return Widgetbook.material(
      // Use the generated directories variable
      directories: directories,
      addons: [
        MaterialThemeAddon(
          themes: [
            WidgetbookTheme(name: 'Light', data: ThemeData.light()),
            WidgetbookTheme(name: 'Dark', data: ThemeData.dark()),
          ],
        ),
        CupertinoThemeAddon(
          themes: [
            WidgetbookTheme(
              name: 'Light',
              data: const CupertinoThemeData().copyWith(
                brightness: Brightness.light,
                primaryColor: Colors.blue,
              ),
            ),
            WidgetbookTheme(
              name: 'Dark',
              data: const CupertinoThemeData().copyWith(
                brightness: Brightness.dark,
                primaryColor: Colors.blue,
              ),
            ),
          ],
        ),
        DeviceFrameAddon(
          devices: [
            Devices.android.pixel4,
            Devices.android.largeTablet,
            Devices.ios.iPhone14Pro,
            Devices.ios.iPad,
            Devices.macOS.macBookPro,
          ],
          initialDevice: Devices.ios.iPhone14Pro,
        ),
        TextScaleAddon(scales: [1.0, 1.2, 1.5, 2.0], initialScale: 1),
      ],
      integrations: [
        // To use Widgetbook Cloud
        // WidgetbookCloudIntegration(),
      ],
    );
  }
}
